{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/HP/Desktop/dashboard/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/HP/Desktop/dashboard/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/HP/Desktop/dashboard/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/HP/Desktop/dashboard/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Transport = require(\"../transport\");\n\nvar parser = require(\"engine.io-parser\");\n\nvar parseqs = require(\"parseqs\");\n\nvar yeast = require(\"yeast\");\n\nvar _require = require(\"../util\"),\n    pick = _require.pick;\n\nvar _require2 = require(\"./websocket-constructor\"),\n    WebSocket = _require2.WebSocket,\n    usingBrowserWebSocket = _require2.usingBrowserWebSocket,\n    defaultBinaryType = _require2.defaultBinaryType,\n    nextTick = _require2.nextTick;\n\nvar debug = require(\"debug\")(\"engine.io-client:websocket\"); // detect ReactNative environment\n\n\nvar isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\n\nvar WS = /*#__PURE__*/function (_Transport) {\n  \"use strict\";\n\n  _inherits(WS, _Transport);\n\n  var _super = _createSuper(WS);\n\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  function WS(opts) {\n    var _this;\n\n    _classCallCheck(this, WS);\n\n    _this = _super.call(this, opts);\n    _this.supportsBinary = !opts.forceBase64;\n    return _this;\n  }\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n\n\n  _createClass(WS, [{\n    key: \"name\",\n    get: function get() {\n      return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doOpen\",\n    value: function doOpen() {\n      if (!this.check()) {\n        // let probe timeout\n        return;\n      }\n\n      var uri = this.uri();\n      var protocols = this.opts.protocols; // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n\n      var opts = isReactNative ? {} : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n\n      if (this.opts.extraHeaders) {\n        opts.headers = this.opts.extraHeaders;\n      }\n\n      try {\n        this.ws = usingBrowserWebSocket && !isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n      } catch (err) {\n        return this.emit(\"error\", err);\n      }\n\n      this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n      this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners() {\n      var _this2 = this;\n\n      this.ws.onopen = function () {\n        if (_this2.opts.autoUnref) {\n          _this2.ws._socket.unref();\n        }\n\n        _this2.onOpen();\n      };\n\n      this.ws.onclose = this.onClose.bind(this);\n\n      this.ws.onmessage = function (ev) {\n        return _this2.onData(ev.data);\n      };\n\n      this.ws.onerror = function (e) {\n        return _this2.onError(\"websocket error\", e);\n      };\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n\n  }, {\n    key: \"write\",\n    value: function write(packets) {\n      var _this3 = this;\n\n      this.writable = false; // encodePacket efficient as it uses WS framing\n      // no need for encodePayload\n\n      var _loop = function _loop(i) {\n        var packet = packets[i];\n        var lastPacket = i === packets.length - 1;\n        parser.encodePacket(packet, _this3.supportsBinary, function (data) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (!usingBrowserWebSocket) {\n            if (packet.options) {\n              opts.compress = packet.options.compress;\n            }\n\n            if (_this3.opts.perMessageDeflate) {\n              var len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n\n              if (len < _this3.opts.perMessageDeflate.threshold) {\n                opts.compress = false;\n              }\n            }\n          } // Sometimes the websocket has already been closed but the browser didn't\n          // have a chance of informing us about it yet, in that case send will\n          // throw an error\n\n\n          try {\n            if (usingBrowserWebSocket) {\n              // TypeError is thrown when passing the second argument on Safari\n              _this3.ws.send(data);\n            } else {\n              _this3.ws.send(data, opts);\n            }\n          } catch (e) {\n            debug(\"websocket closed before onclose event\");\n          }\n\n          if (lastPacket) {\n            // fake drain\n            // defer to next tick to allow Socket to clear writeBuffer\n            nextTick(function () {\n              _this3.writable = true;\n\n              _this3.emit(\"drain\");\n            });\n          }\n        });\n      };\n\n      for (var i = 0; i < packets.length; i++) {\n        _loop(i);\n      }\n    }\n    /**\n     * Called upon close\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      Transport.prototype.onClose.call(this);\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      if (typeof this.ws !== \"undefined\") {\n        this.ws.close();\n        this.ws = null;\n      }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"uri\",\n    value: function uri() {\n      var query = this.query || {};\n      var schema = this.opts.secure ? \"wss\" : \"ws\";\n      var port = \"\"; // avoid port if default for schema\n\n      if (this.opts.port && (\"wss\" === schema && Number(this.opts.port) !== 443 || \"ws\" === schema && Number(this.opts.port) !== 80)) {\n        port = \":\" + this.opts.port;\n      } // append timestamp to URI\n\n\n      if (this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = yeast();\n      } // communicate binary support capabilities\n\n\n      if (!this.supportsBinary) {\n        query.b64 = 1;\n      }\n\n      query = parseqs.encode(query); // prepend ? to query\n\n      if (query.length) {\n        query = \"?\" + query;\n      }\n\n      var ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n      return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + query;\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      return !!WebSocket && !(\"__initialize\" in WebSocket && this.name === WS.prototype.name);\n    }\n  }]);\n\n  return WS;\n}(Transport);\n\nmodule.exports = WS;","map":{"version":3,"names":["Transport","require","parser","parseqs","yeast","pick","WebSocket","usingBrowserWebSocket","defaultBinaryType","nextTick","debug","isReactNative","navigator","product","toLowerCase","WS","opts","supportsBinary","forceBase64","check","uri","protocols","extraHeaders","headers","ws","err","emit","binaryType","socket","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","onClose","bind","onmessage","ev","onData","data","onerror","e","onError","packets","writable","i","packet","lastPacket","length","encodePacket","options","compress","perMessageDeflate","len","Buffer","byteLength","threshold","send","prototype","call","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","encode","ipv6","hostname","indexOf","path","name","module","exports"],"sources":["C:/Users/HP/Desktop/dashboard/node_modules/engine.io-client/lib/transports/websocket.js"],"sourcesContent":["const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType,\n  nextTick\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          nextTick(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}