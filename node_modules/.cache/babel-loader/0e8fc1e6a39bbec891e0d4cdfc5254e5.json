{"ast":null,"code":"import orderBy from 'lodash/orderBy';\nimport some from 'lodash/some';\nexport function sort(_ref, data) {\n  let {\n    prop,\n    order\n  } = _ref;\n  return orderBy(data, prop, order === 'descending' ? 'desc' : 'asc');\n}\nexport function filter(filters, filterValues, data) {\n  const filterAndVals = {};\n\n  for (let key in filterValues) {\n    filterAndVals[key] = {\n      value: filterValues[key],\n      filter: filters[key].filter,\n      prop: filters[key].prop\n    };\n  }\n\n  return data.filter(row => some(filterAndVals, _ref2 => {\n    let {\n      filter,\n      value,\n      prop\n    } = _ref2;\n    return !prop ? some(row, filter.bind(null, value)) : filter(value, row[key]);\n  }));\n}\nexport function containsIgnoreCase(a, b) {\n  a = String(a).toLowerCase().trim();\n  b = String(b).toLowerCase().trim();\n  return b.indexOf(a) >= 0;\n}","map":{"version":3,"names":["orderBy","some","sort","data","prop","order","filter","filters","filterValues","filterAndVals","key","value","row","bind","containsIgnoreCase","a","b","String","toLowerCase","trim","indexOf"],"sources":["C:/xampp/htdocs/essay-helpers/admin_dashboard/src/components/components-tb/utils.js"],"sourcesContent":["import orderBy from 'lodash/orderBy';\nimport some from 'lodash/some';\nimport type {SortBy, AppData, Value, Filters} from './types';\n\nexport function sort({prop, order}: SortBy, data: AppData) {\n  return orderBy(data, prop, order === 'descending' ? 'desc' : 'asc');\n}\n\nexport function filter(filters: Filters, filterValues, data: AppData) {\n  const filterAndVals = {};\n  for (let key in filterValues) {\n    filterAndVals[key] = {\n      value: filterValues[key],\n      filter: filters[key].filter,\n      prop: filters[key].prop,\n    };\n  }\n\n  return data.filter((row) => some(\n    filterAndVals,\n    ({filter, value, prop}) =>\n      !prop ? some(row, filter.bind(null, value)) : filter(value, row[key])\n  ));\n}\n\nexport function containsIgnoreCase(a: Value, b: Value) {\n  a = String(a).toLowerCase().trim();\n  b = String(b).toLowerCase().trim();\n  return b.indexOf(a) >= 0;\n}\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,SAASC,IAAT,OAAqCC,IAArC,EAAoD;EAAA,IAAtC;IAACC,IAAD;IAAOC;EAAP,CAAsC;EACzD,OAAOL,OAAO,CAACG,IAAD,EAAOC,IAAP,EAAaC,KAAK,KAAK,YAAV,GAAyB,MAAzB,GAAkC,KAA/C,CAAd;AACD;AAED,OAAO,SAASC,MAAT,CAAgBC,OAAhB,EAAkCC,YAAlC,EAAgDL,IAAhD,EAA+D;EACpE,MAAMM,aAAa,GAAG,EAAtB;;EACA,KAAK,IAAIC,GAAT,IAAgBF,YAAhB,EAA8B;IAC5BC,aAAa,CAACC,GAAD,CAAb,GAAqB;MACnBC,KAAK,EAAEH,YAAY,CAACE,GAAD,CADA;MAEnBJ,MAAM,EAAEC,OAAO,CAACG,GAAD,CAAP,CAAaJ,MAFF;MAGnBF,IAAI,EAAEG,OAAO,CAACG,GAAD,CAAP,CAAaN;IAHA,CAArB;EAKD;;EAED,OAAOD,IAAI,CAACG,MAAL,CAAaM,GAAD,IAASX,IAAI,CAC9BQ,aAD8B,EAE9B;IAAA,IAAC;MAACH,MAAD;MAASK,KAAT;MAAgBP;IAAhB,CAAD;IAAA,OACE,CAACA,IAAD,GAAQH,IAAI,CAACW,GAAD,EAAMN,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,CAAN,CAAZ,GAA8CL,MAAM,CAACK,KAAD,EAAQC,GAAG,CAACF,GAAD,CAAX,CADtD;EAAA,CAF8B,CAAzB,CAAP;AAKD;AAED,OAAO,SAASI,kBAAT,CAA4BC,CAA5B,EAAsCC,CAAtC,EAAgD;EACrDD,CAAC,GAAGE,MAAM,CAACF,CAAD,CAAN,CAAUG,WAAV,GAAwBC,IAAxB,EAAJ;EACAH,CAAC,GAAGC,MAAM,CAACD,CAAD,CAAN,CAAUE,WAAV,GAAwBC,IAAxB,EAAJ;EACA,OAAOH,CAAC,CAACI,OAAF,CAAUL,CAAV,KAAgB,CAAvB;AACD"},"metadata":{},"sourceType":"module"}