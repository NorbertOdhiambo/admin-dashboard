{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\dashboard\\\\src\\\\views\\\\UploadWork.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Container, Card, CardHeader, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, DatePicker, FormCheckbox, Button } from \"shards-react\";\nimport { useLocation } from 'react-router-dom';\nimport PageTitle from \"./../components/common/PageTitle\";\nimport NewPostBtn from '../posts/NewPostBtn';\nimport { SendForm } from '../components/order-upload/SendForm'; // import OpenForm from '../components/open-send-form/OpenForm';\n\nimport './Upload.css'; // const SendForm = (props) => {\n//     const location = useLocation();\n//     console.log(props);\n//     // ============================================================\n//     const [fileUrl, setFileUrl] = useState({});\n//     const [fileInfo, setFileInfo] = useState({});\n//     function uploadFile(e) {\n//         var file = e.target.files[0] //the file\n//         var reader = new FileReader() //this for convert to Base64 \n//         reader.readAsDataURL(e.target.files[0]) //start conversion...\n//         reader.onload = function (e) { //.. once finished..\n//             var rawLog = reader.result.split(',')[1]; //extract only thee file data part\n//             var dataSend = { dataReq: { data: rawLog, name: file.name, type: file.type }, fname: \"uploadFilesToGoogleDrive\" }; //preapre info to send to API\n//             fetch('https://script.google.com/macros/s/AKfycbxrJ9OhkB7n0QdO3hPAbyuQbFJ6f9Hv2C5AK--5kcCwGqP0dilfzKyj8vK6aoK1dQOO/exec', //your AppsScript URL\n//                 { method: \"POST\", body: JSON.stringify(dataSend) }) //send to Api\n//                 .then(res => res.json()).then((a) => {\n//                     console.log(a) //See response\n//                     console.log(file)\n//                     setFileUrl(a);\n//                     setFileInfo(file);\n//                 }).catch(e => console.log(e)) // Or Error in console\n//         }\n//     }\n//     //   ===================================================================\n//     useEffect(() => {\n//         window.scrollTo(0, 0);\n//         alluser();\n//     }, []);\n//     const [isuser, setuser] = useState([]);\n//     const alluser = async (ids) => {\n//         try {\n//             axios.get(`http://localhost:8000/essay-helpers/api/getusers.php`)\n//                 // axios.get(`https://graduate-essay-helpers.com/api/getusers.php`)\n//                 .then(res => {\n//                     console.log(res.data.userlist.userdata)\n//                     setuser(res.data.userlist.userdata);\n//                 })\n//         } catch (error) { throw error; }\n//     };\n//     console.log(isuser);\n//     // ===========================================\n//     const [selected, setSelected] = useState(-1);\n//     const value = selected !== -1 && isuser[selected];\n//     const [state, setState] = useState({ conf_upload: false });\n//     const [allData, setAllData] = useState({});\n//     // ===============================================\n//     const [sendDoc, setSendDoc] = useState({\n//         name: \"\",\n//         email: \"\",\n//         user_id: \"\",\n//         conf_upload: false,\n//         message: \"\",\n//         file_url: \"\",\n//     });\n//     // ===================================================\n//     const onChangeValue = (e) => {\n//         setSendDoc({\n//             ...sendDoc,\n//             [e.target.name]: e.target.value\n//         });\n//     }\n//     // ====================================================\n//     const submitForm = async (event) => {\n//         const dtArr = {\n//             name: value.name,\n//             email: value.email,\n//             user_id: value.id,\n//             title: location.state.getData[0].title,\n//             message: sendDoc.message,\n//             ord_id: location.state.getData[0].id,\n//             conf_upload: sendDoc.conf_upload.toString(),\n//             file_url: fileUrl.url,\n//             file_name: fileInfo.name,\n//             file_type: fileInfo.type,\n//             file_size: fileInfo.size,\n//         }\n//         let one = \"http://localhost:8000/essay-helpers/api/updateorder.php\";\n//         let two = \"http://localhost:8000/essay-helpers/api/insertdeliver.php\";\n//         let three = \"http://localhost:8000/essay-helpers/api/insertblog.php\";\n//         let four = \"http://localhost:8000/essay-helpers/api/getblog.php\";\n//         let five = \"http://localhost:8000/essay-helpers/api/getdelivered.php\";\n//         const requestOne = axios.post(one, dtArr);\n//         const requestTwo = axios.post(two, dtArr);\n//         const requestThree = axios.post(three, dtArr);\n//         const requestFour = axios.post(four, dtArr);\n//         const requestFive = axios.post(five, dtArr);\n//         try {\n//             event.preventDefault();\n//             event.persist();\n//             axios.all([requestOne, requestTwo, requestThree, requestFour, requestFive])\n//                 .then(axios.spread((...res) => {\n//                     const resOne = res[0]\n//                     const resTwo = res[1]\n//                     const resThree = res[2]\n//                     const resFour = res[3]\n//                     const resFive = res[4]\n//                     console.log(resOne);\n//                     console.log(resTwo);\n//                     console.log(resThree);\n//                     console.log(resFour);\n//                     console.log(resFive);\n//                     console.log(res);\n//                     console.log(dtArr);\n//                     if (res[0].data.success == true && res[1].data.success == true) {\n//                         setAllData(res);\n//                         alert(`Finished document sent to ${value.name} successfully`);\n//                     }\n//                     return;\n//                 }))\n//         } catch (error) { throw error; }\n//         console.log(dtArr);\n//     }\n//     console.log(allData);\n//     console.log(fileInfo);\n//     console.log(location);\n//     // =====================================================================\n//     // };\n//     const uploaded = \"yes\";\n//     return (\n//         <>\n//             <>\n//                 {submitForm ?\n//                     <h3>data not inserted</h3>\n//                     :\n//                     <h3>data inserted</h3>\n//                 }\n//             </>\n//             {allData.length === undefined ?\n//                 <Card small className=\"mb-4\">\n//                     <CardHeader className=\"border-bottom\">\n//                         <h6 className='m-0'>Send Order</h6>\n//                     </CardHeader>\n//                     <ListGroup flush>\n//                         <ListGroupItem className=\"p-3\">\n//                             <Form onSubmit={submitForm}>\n//                                 <Row>\n//                                     <h5>Document Title: <b>{location.state.getData[0].title}</b>  </h5>\n//                                 </Row>\n//                                 <Row>\n//                                     <h5>Order No: <b>#{location.state.getData[0].id}</b></h5>\n//                                 </Row>\n//                                 <FormGroup>\n//                                     <Row>\n//                                         <Col>\n//                                             <label htmlFor='name'>Name: </label>\n//                                             <FormSelect\n//                                                 name=\"name\"\n//                                                 id=\"name\"\n//                                                 size=\"lg\"\n//                                                 style={{ fontWeight: '500', fontSize: '1.2rem', color: 'black' }}\n//                                                 onChange={(e) => {\n//                                                     setSelected(e.target.value);\n//                                                     setSendDoc({\n//                                                         ...sendDoc,\n//                                                         [e.target.name]: e.target.value\n//                                                     });\n//                                                 }}\n//                                                 value={selected}\n//                                             >\n//                                                 <option value=\"first\">Select ---</option>\n//                                                 {isuser.map((user, index) => (\n//                                                     <>\n//                                                         <option\n//                                                             key={user.id}\n//                                                             value={index}\n//                                                         >{user.name}</option>\n//                                                     </>\n//                                                 ))}\n//                                             </FormSelect>\n//                                         </Col>\n//                                         <Col>\n//                                             {value &&\n//                                                 <>\n//                                                     <label htmlFor='email'>Email: </label>\n//                                                     <FormInput\n//                                                         name=\"email\"\n//                                                         id=\"email\"\n//                                                         value={value.email}\n//                                                         onChange={onChangeValue}\n//                                                         style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\n//                                                     >\n//                                                     </FormInput></>\n//                                             }\n//                                         </Col>\n//                                     </Row>\n//                                 </FormGroup>\n//                                 <FormGroup>\n//                                     <Row>\n//                                         <Col>\n//                                             {value &&\n//                                                 <>\n//                                                     <label htmlFor='user_id'>User id:</label>\n//                                                     <FormInput\n//                                                         name=\"user_id\"\n//                                                         id=\"user_id\"\n//                                                         style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\n//                                                         value={value.id}\n//                                                         onChange={onChangeValue}\n//                                                     ></FormInput></>\n//                                             }\n//                                         </Col>\n//                                         <Col>\n//                                             {value &&\n//                                                 <>\n//                                                     <label htmlFor='order_id' hidden>Order id</label>\n//                                                     <FormInput\n//                                                         name=\"order_id\"\n//                                                         id=\"order_id\"\n//                                                         value={location.state.getData[0].id}\n//                                                         onChange={onChangeValue}\n//                                                         style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\n//                                                         hidden\n//                                                     >\n//                                                     </FormInput>\n//                                                 </>\n//                                             }\n//                                         </Col>\n//                                     </Row>\n//                                 </FormGroup>\n//                                 <FormGroup>\n//                                     <Row>\n//                                         <Col md=\"6\">\n//                                             <label htmlFor='conf_upload'>Confirm upload to blog</label>\n//                                             <FormCheckbox\n//                                                 name=\"conf_upload\"\n//                                                 id=\"conf_upload\"\n//                                                 checked={sendDoc.conf_upload}\n//                                                 onChange={(e) => {\n//                                                     setSendDoc({\n//                                                         ...sendDoc,\n//                                                         [e.target.name]: e.target.checked\n//                                                     })\n//                                                 }}\n//                                                 value={sendDoc.conf_upload}\n//                                                 style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\n//                                             >check the box to upload this document to the site's blog page</FormCheckbox>\n//                                         </Col>\n//                                         {/* <Col>\n//                                     <FormInput\n//                                         name=\"state\"\n//                                         value={sendDoc.conf_upload.toString()}\n//                                         hidden\n//                                     ></FormInput>\n//                                 </Col> */}\n//                                     </Row>\n//                                 </FormGroup>\n//                                 <FormGroup>\n//                                     <Row>\n//                                         <Col md=\"12\" className=\"form-group\">\n//                                             <label htmlFor=\"message\">Any Message?</label>\n//                                             <FormTextarea id=\"message\" name=\"message\" onChange={onChangeValue} rows=\"4\" style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }} />\n//                                         </Col>\n//                                     </Row>\n//                                 </FormGroup>\n//                                 <FormGroup>\n//                                     <label htmlFor='files'>Upload document: </label>\n//                                     <Col\n//                                         lg=\"4\">\n//                                         <FormInput\n//                                             type=\"file\"\n//                                             name=\"file_url\"\n//                                             accept=\"application/pdf/docx/png/jpg/jpeg\"\n//                                             onChange={uploadFile}\n//                                         ></FormInput>\n//                                     </Col>\n//                                 </FormGroup>\n//                                 <Button\n//                                     type=\"submit\" theme=\"accent\" value=\"send\"\n//                                     style={{ fontWeight: '500', fontSize: '0.9rem' }}\n//                                 >Send</Button>\n//                             </Form>\n//                         </ListGroupItem>\n//                     </ListGroup>\n//                 </Card>\n//                 :\n//                 <Card small className=\"mb-4\">\n//                     <CardHeader className=\"border-bottom\">\n//                         <h6>Sent / Delivered</h6>\n//                     </CardHeader>\n//                     <ListGroup flush>\n//                         <ListGroupItem className=\"p-3\">\n//                             <Row>\n//                                 <h5>Document Title: <b>{location.state.getData[0].title}</b></h5>\n//                                 <h5>order Id: <b>#{location.state.getData[0].id}</b></h5>\n//                                 <h5>Writer: <b>{location.state.getData[0].writer_name}</b></h5>\n//                                 <h5>Rating: </h5>\n//                                 <h5>Client: <b>{allData[4].data.deliverlist.deliverdata[0].name}</b></h5>\n//                                 <h5>Email: <b>{allData[4].data.deliverlist.deliverdata[0].email}</b></h5>\n//                                 <h5>Document(s): <b>{allData[4].data.deliverlist.deliverdata[0].file_url}</b></h5>\n//                                 <h5>Uploaded to blog: </h5>\n//                                 <h5>Date Sent: <b>{allData[4].data.deliverlist.deliverdata[0].created_at}</b></h5>\n//                             </Row>\n//                         </ListGroupItem>\n//                     </ListGroup>\n//                 </Card>\n//             }\n//         </>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadWork = props => {\n  _s();\n\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    allorders();\n  }, []);\n  console.log(props);\n  const [isorder, setOrder] = useState([]);\n\n  const allorders = async ids => {\n    try {\n      axios.get(`http://localhost:8000/essay-helpers/api/getorders.php`) // axios.get(`https://graduate-essay-helpers.com/api/getorders.php`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata);\n        setOrder(res.data.orderlist.orderdata);\n      });\n    } catch (error) {\n      throw error;\n    }\n  }; // console.log(isorder)\n  // ========================================================\n\n\n  const [selected, setSelected] = useState(-1);\n  const value = selected !== -1 && isorder[selected];\n  const ttlRef = useRef();\n  console.log(ttlRef);\n  const [orderId, setOrderId] = useState([]); // =============================================================\n\n  const [getTitle, setGetTitle] = useState({\n    title: value.title,\n    order_id: \"\",\n    user_id: \"\"\n  });\n\n  const onChangeValue = e => {\n    // setSelected(e.target.value)\n    setGetTitle({ ...getTitle,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(getTitle); // ====================================================================\n\n  const submitForm = async e => {\n    try {\n      e.preventDefault();\n      e.persist();\n      axios.post(`http://localhost:8000/essay-helpers/api/gettitle.php`, {\n        order_id: value.id,\n        user_id: value.user_id,\n        title: getTitle.title\n      }).then(res => {\n        console.log(res.data);\n        setGetTitle(res.data.orderlist.orderdata);\n        ttlRef.current = res.data.orderlist.orderdata;\n        const id = ttlRef.current[0].id;\n        console.log(id);\n        setOrderId(id);\n\n        if (res.data.success === true) {\n          props.history.push({\n            pathname: \"/upload-work/\",\n            search: \"?id=\" + id,\n            state: {\n              getData: res.data.orderlist.orderdata\n            }\n          });\n        } // else {\n        //     props.history.push({ pathname: \"/upload-work/\" })\n        // }\n        // props.history.push({pathname: \"/assign/\", search: \"?id=\" + id, state: { rowIndex: res[0].data.orderlist.orderdata }})\n        // alert(\"Coupon created and assigned to client successfully!\");\n        // { res.data.sucess = \"false\" ? console.log(\"title not selected\") : window.location = \"/orders\" }\n\n\n        return props;\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  console.log(getTitle);\n  const dan = SendForm();\n  console.log(dan.dev);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      noGutters: true,\n      className: \"page-header py-4\",\n      children: /*#__PURE__*/_jsxDEV(PageTitle, {\n        title: \"Upload Work\",\n        subtitle: \"\",\n        className: \"text-sm-left mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }, this), location.search != \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"12\",\n          children: /*#__PURE__*/_jsxDEV(SendForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            small: true,\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"border-bottom\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"m-0\",\n                children: \"Send Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              flush: true,\n              children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                className: \"p-3\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: submitForm,\n                  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"title\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Document Title: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 76\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"8\",\n                      children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                        name: \"title\",\n                        id: \"title\",\n                        style: {\n                          fontWeight: '500',\n                          fontSize: '1.2rem',\n                          color: 'black'\n                        },\n                        size: \"lg\",\n                        onChange: e => {\n                          setSelected(e.target.value);\n                          setGetTitle({ ...getTitle,\n                            [e.target.name]: e.target.value\n                          });\n                        },\n                        value: selected,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"select\",\n                          children: \"Select ---\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 515,\n                          columnNumber: 61\n                        }, this), isorder.map((order, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: index,\n                            children: order.title\n                          }, order.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 519,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"5\",\n                        children: value && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"order_id\",\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: \"Order id: \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 534,\n                              columnNumber: 95\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 534,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                            name: \"order_id\",\n                            id: \"order_id\",\n                            disabled: true,\n                            value: value.id,\n                            onChange: onChangeValue,\n                            style: {\n                              fontWeight: '500',\n                              fontSize: '1rem',\n                              color: 'black'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 535,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        lg: \"5\",\n                        children: value && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"user_id\",\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: \"User id: \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 549,\n                              columnNumber: 94\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 549,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                            name: \"user_id\",\n                            id: \"user_id\",\n                            disabled: true,\n                            value: value.user_id,\n                            onChange: onChangeValue,\n                            style: {\n                              fontWeight: '500',\n                              fontSize: '1rem',\n                              color: 'black'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 550,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 546,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    theme: \"accent\",\n                    value: \"send\",\n                    style: {\n                      fontWeight: '500',\n                      fontSize: '0.9rem'\n                    },\n                    children: \"Open\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadWork, \"cK0VMnt/c/ocqfSH0NPQTvK2hEc=\", false, function () {\n  return [useLocation];\n});\n\n_c = UploadWork;\nexport default UploadWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadWork\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Container","Card","CardHeader","ListGroup","ListGroupItem","Row","Col","Form","FormGroup","FormInput","FormSelect","FormTextarea","DatePicker","FormCheckbox","Button","useLocation","PageTitle","NewPostBtn","SendForm","UploadWork","props","location","console","log","window","scrollTo","allorders","isorder","setOrder","ids","get","then","res","data","orderlist","orderdata","error","selected","setSelected","value","ttlRef","orderId","setOrderId","getTitle","setGetTitle","title","order_id","user_id","onChangeValue","e","target","name","submitForm","preventDefault","persist","post","id","current","success","history","push","pathname","search","state","getData","dan","dev","fontWeight","fontSize","color","map","order","index"],"sources":["C:/Users/HP/Desktop/dashboard/src/views/UploadWork.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    FormInput,\r\n    FormSelect,\r\n    FormTextarea,\r\n    DatePicker,\r\n    FormCheckbox,\r\n    Button\r\n} from \"shards-react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\nimport NewPostBtn from '../posts/NewPostBtn';\r\n\r\nimport { SendForm } from '../components/order-upload/SendForm';\r\n// import OpenForm from '../components/open-send-form/OpenForm';\r\n\r\n\r\nimport './Upload.css';\r\n\r\n\r\n// const SendForm = (props) => {\r\n\r\n//     const location = useLocation();\r\n\r\n//     console.log(props);\r\n\r\n//     // ============================================================\r\n\r\n//     const [fileUrl, setFileUrl] = useState({});\r\n//     const [fileInfo, setFileInfo] = useState({});\r\n\r\n//     function uploadFile(e) {\r\n//         var file = e.target.files[0] //the file\r\n//         var reader = new FileReader() //this for convert to Base64 \r\n//         reader.readAsDataURL(e.target.files[0]) //start conversion...\r\n//         reader.onload = function (e) { //.. once finished..\r\n//             var rawLog = reader.result.split(',')[1]; //extract only thee file data part\r\n//             var dataSend = { dataReq: { data: rawLog, name: file.name, type: file.type }, fname: \"uploadFilesToGoogleDrive\" }; //preapre info to send to API\r\n//             fetch('https://script.google.com/macros/s/AKfycbxrJ9OhkB7n0QdO3hPAbyuQbFJ6f9Hv2C5AK--5kcCwGqP0dilfzKyj8vK6aoK1dQOO/exec', //your AppsScript URL\r\n//                 { method: \"POST\", body: JSON.stringify(dataSend) }) //send to Api\r\n//                 .then(res => res.json()).then((a) => {\r\n//                     console.log(a) //See response\r\n//                     console.log(file)\r\n//                     setFileUrl(a);\r\n//                     setFileInfo(file);\r\n//                 }).catch(e => console.log(e)) // Or Error in console\r\n//         }\r\n//     }\r\n\r\n\r\n//     //   ===================================================================\r\n\r\n//     useEffect(() => {\r\n//         window.scrollTo(0, 0);\r\n//         alluser();\r\n//     }, []);\r\n\r\n//     const [isuser, setuser] = useState([]);\r\n//     const alluser = async (ids) => {\r\n//         try {\r\n//             axios.get(`http://localhost:8000/essay-helpers/api/getusers.php`)\r\n//                 // axios.get(`https://graduate-essay-helpers.com/api/getusers.php`)\r\n//                 .then(res => {\r\n//                     console.log(res.data.userlist.userdata)\r\n//                     setuser(res.data.userlist.userdata);\r\n//                 })\r\n//         } catch (error) { throw error; }\r\n//     };\r\n\r\n//     console.log(isuser);\r\n\r\n//     // ===========================================\r\n\r\n//     const [selected, setSelected] = useState(-1);\r\n\r\n//     const value = selected !== -1 && isuser[selected];\r\n\r\n//     const [state, setState] = useState({ conf_upload: false });\r\n\r\n//     const [allData, setAllData] = useState({});\r\n\r\n//     // ===============================================\r\n\r\n//     const [sendDoc, setSendDoc] = useState({\r\n//         name: \"\",\r\n//         email: \"\",\r\n//         user_id: \"\",\r\n//         conf_upload: false,\r\n//         message: \"\",\r\n//         file_url: \"\",\r\n//     });\r\n\r\n//     // ===================================================\r\n\r\n\r\n//     const onChangeValue = (e) => {\r\n//         setSendDoc({\r\n//             ...sendDoc,\r\n//             [e.target.name]: e.target.value\r\n//         });\r\n//     }\r\n\r\n//     // ====================================================\r\n\r\n//     const submitForm = async (event) => {\r\n\r\n//         const dtArr = {\r\n//             name: value.name,\r\n//             email: value.email,\r\n//             user_id: value.id,\r\n//             title: location.state.getData[0].title,\r\n//             message: sendDoc.message,\r\n//             ord_id: location.state.getData[0].id,\r\n//             conf_upload: sendDoc.conf_upload.toString(),\r\n//             file_url: fileUrl.url,\r\n//             file_name: fileInfo.name,\r\n//             file_type: fileInfo.type,\r\n//             file_size: fileInfo.size,\r\n//         }\r\n\r\n//         let one = \"http://localhost:8000/essay-helpers/api/updateorder.php\";\r\n//         let two = \"http://localhost:8000/essay-helpers/api/insertdeliver.php\";\r\n//         let three = \"http://localhost:8000/essay-helpers/api/insertblog.php\";\r\n//         let four = \"http://localhost:8000/essay-helpers/api/getblog.php\";\r\n//         let five = \"http://localhost:8000/essay-helpers/api/getdelivered.php\";\r\n\r\n//         const requestOne = axios.post(one, dtArr);\r\n//         const requestTwo = axios.post(two, dtArr);\r\n//         const requestThree = axios.post(three, dtArr);\r\n//         const requestFour = axios.post(four, dtArr);\r\n//         const requestFive = axios.post(five, dtArr);\r\n\r\n//         try {\r\n//             event.preventDefault();\r\n//             event.persist();\r\n//             axios.all([requestOne, requestTwo, requestThree, requestFour, requestFive])\r\n//                 .then(axios.spread((...res) => {\r\n//                     const resOne = res[0]\r\n//                     const resTwo = res[1]\r\n//                     const resThree = res[2]\r\n//                     const resFour = res[3]\r\n//                     const resFive = res[4]\r\n//                     console.log(resOne);\r\n//                     console.log(resTwo);\r\n//                     console.log(resThree);\r\n//                     console.log(resFour);\r\n//                     console.log(resFive);\r\n//                     console.log(res);\r\n//                     console.log(dtArr);\r\n//                     if (res[0].data.success == true && res[1].data.success == true) {\r\n//                         setAllData(res);\r\n//                         alert(`Finished document sent to ${value.name} successfully`);\r\n//                     }\r\n//                     return;\r\n//                 }))\r\n//         } catch (error) { throw error; }\r\n\r\n//         console.log(dtArr);\r\n//     }\r\n\r\n//     console.log(allData);\r\n//     console.log(fileInfo);\r\n//     console.log(location);\r\n\r\n//     // =====================================================================\r\n\r\n\r\n//     // };\r\n\r\n//     const uploaded = \"yes\";\r\n\r\n//     return (\r\n//         <>\r\n//             <>\r\n//                 {submitForm ?\r\n//                     <h3>data not inserted</h3>\r\n//                     :\r\n//                     <h3>data inserted</h3>\r\n//                 }\r\n//             </>\r\n\r\n//             {allData.length === undefined ?\r\n//                 <Card small className=\"mb-4\">\r\n//                     <CardHeader className=\"border-bottom\">\r\n//                         <h6 className='m-0'>Send Order</h6>\r\n//                     </CardHeader>\r\n//                     <ListGroup flush>\r\n//                         <ListGroupItem className=\"p-3\">\r\n//                             <Form onSubmit={submitForm}>\r\n//                                 <Row>\r\n//                                     <h5>Document Title: <b>{location.state.getData[0].title}</b>  </h5>\r\n//                                 </Row>\r\n//                                 <Row>\r\n//                                     <h5>Order No: <b>#{location.state.getData[0].id}</b></h5>\r\n//                                 </Row>\r\n//                                 <FormGroup>\r\n//                                     <Row>\r\n//                                         <Col>\r\n//                                             <label htmlFor='name'>Name: </label>\r\n//                                             <FormSelect\r\n//                                                 name=\"name\"\r\n//                                                 id=\"name\"\r\n//                                                 size=\"lg\"\r\n//                                                 style={{ fontWeight: '500', fontSize: '1.2rem', color: 'black' }}\r\n//                                                 onChange={(e) => {\r\n//                                                     setSelected(e.target.value);\r\n//                                                     setSendDoc({\r\n//                                                         ...sendDoc,\r\n//                                                         [e.target.name]: e.target.value\r\n//                                                     });\r\n//                                                 }}\r\n//                                                 value={selected}\r\n//                                             >\r\n//                                                 <option value=\"first\">Select ---</option>\r\n//                                                 {isuser.map((user, index) => (\r\n//                                                     <>\r\n//                                                         <option\r\n//                                                             key={user.id}\r\n//                                                             value={index}\r\n//                                                         >{user.name}</option>\r\n//                                                     </>\r\n//                                                 ))}\r\n//                                             </FormSelect>\r\n//                                         </Col>\r\n//                                         <Col>\r\n//                                             {value &&\r\n//                                                 <>\r\n//                                                     <label htmlFor='email'>Email: </label>\r\n//                                                     <FormInput\r\n//                                                         name=\"email\"\r\n//                                                         id=\"email\"\r\n//                                                         value={value.email}\r\n//                                                         onChange={onChangeValue}\r\n//                                                         style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\r\n//                                                     >\r\n//                                                     </FormInput></>\r\n//                                             }\r\n//                                         </Col>\r\n//                                     </Row>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup>\r\n//                                     <Row>\r\n//                                         <Col>\r\n//                                             {value &&\r\n//                                                 <>\r\n//                                                     <label htmlFor='user_id'>User id:</label>\r\n//                                                     <FormInput\r\n//                                                         name=\"user_id\"\r\n//                                                         id=\"user_id\"\r\n//                                                         style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\r\n//                                                         value={value.id}\r\n//                                                         onChange={onChangeValue}\r\n//                                                     ></FormInput></>\r\n//                                             }\r\n//                                         </Col>\r\n//                                         <Col>\r\n//                                             {value &&\r\n//                                                 <>\r\n//                                                     <label htmlFor='order_id' hidden>Order id</label>\r\n//                                                     <FormInput\r\n//                                                         name=\"order_id\"\r\n//                                                         id=\"order_id\"\r\n//                                                         value={location.state.getData[0].id}\r\n//                                                         onChange={onChangeValue}\r\n//                                                         style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\r\n//                                                         hidden\r\n//                                                     >\r\n//                                                     </FormInput>\r\n//                                                 </>\r\n//                                             }\r\n//                                         </Col>\r\n//                                     </Row>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup>\r\n//                                     <Row>\r\n//                                         <Col md=\"6\">\r\n//                                             <label htmlFor='conf_upload'>Confirm upload to blog</label>\r\n//                                             <FormCheckbox\r\n//                                                 name=\"conf_upload\"\r\n//                                                 id=\"conf_upload\"\r\n//                                                 checked={sendDoc.conf_upload}\r\n//                                                 onChange={(e) => {\r\n//                                                     setSendDoc({\r\n//                                                         ...sendDoc,\r\n//                                                         [e.target.name]: e.target.checked\r\n//                                                     })\r\n//                                                 }}\r\n//                                                 value={sendDoc.conf_upload}\r\n//                                                 style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\r\n//                                             >check the box to upload this document to the site's blog page</FormCheckbox>\r\n//                                         </Col>\r\n//                                         {/* <Col>\r\n//                                     <FormInput\r\n//                                         name=\"state\"\r\n//                                         value={sendDoc.conf_upload.toString()}\r\n//                                         hidden\r\n//                                     ></FormInput>\r\n//                                 </Col> */}\r\n//                                     </Row>\r\n//                                 </FormGroup>\r\n//                                 <FormGroup>\r\n//                                     <Row>\r\n//                                         <Col md=\"12\" className=\"form-group\">\r\n//                                             <label htmlFor=\"message\">Any Message?</label>\r\n//                                             <FormTextarea id=\"message\" name=\"message\" onChange={onChangeValue} rows=\"4\" style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }} />\r\n//                                         </Col>\r\n//                                     </Row>\r\n//                                 </FormGroup>\r\n\r\n//                                 <FormGroup>\r\n//                                     <label htmlFor='files'>Upload document: </label>\r\n//                                     <Col\r\n//                                         lg=\"4\">\r\n//                                         <FormInput\r\n//                                             type=\"file\"\r\n//                                             name=\"file_url\"\r\n//                                             accept=\"application/pdf/docx/png/jpg/jpeg\"\r\n//                                             onChange={uploadFile}\r\n//                                         ></FormInput>\r\n//                                     </Col>\r\n//                                 </FormGroup>\r\n\r\n\r\n//                                 <Button\r\n//                                     type=\"submit\" theme=\"accent\" value=\"send\"\r\n//                                     style={{ fontWeight: '500', fontSize: '0.9rem' }}\r\n//                                 >Send</Button>\r\n\r\n//                             </Form>\r\n//                         </ListGroupItem>\r\n//                     </ListGroup>\r\n//                 </Card>\r\n\r\n//                 :\r\n\r\n//                 <Card small className=\"mb-4\">\r\n//                     <CardHeader className=\"border-bottom\">\r\n//                         <h6>Sent / Delivered</h6>\r\n//                     </CardHeader>\r\n//                     <ListGroup flush>\r\n//                         <ListGroupItem className=\"p-3\">\r\n//                             <Row>\r\n//                                 <h5>Document Title: <b>{location.state.getData[0].title}</b></h5>\r\n//                                 <h5>order Id: <b>#{location.state.getData[0].id}</b></h5>\r\n//                                 <h5>Writer: <b>{location.state.getData[0].writer_name}</b></h5>\r\n//                                 <h5>Rating: </h5>\r\n//                                 <h5>Client: <b>{allData[4].data.deliverlist.deliverdata[0].name}</b></h5>\r\n//                                 <h5>Email: <b>{allData[4].data.deliverlist.deliverdata[0].email}</b></h5>\r\n//                                 <h5>Document(s): <b>{allData[4].data.deliverlist.deliverdata[0].file_url}</b></h5>\r\n//                                 <h5>Uploaded to blog: </h5>\r\n//                                 <h5>Date Sent: <b>{allData[4].data.deliverlist.deliverdata[0].created_at}</b></h5>\r\n//                             </Row>\r\n//                         </ListGroupItem>\r\n//                     </ListGroup>\r\n//                 </Card>\r\n\r\n//             }\r\n//         </>\r\n//     )\r\n// }\r\n\r\n\r\nconst UploadWork = (props) => {\r\n\r\n    const location = useLocation();\r\n\r\n    console.log(location);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        allorders();\r\n    }, []);\r\n\r\n    console.log(props)\r\n\r\n    const [isorder, setOrder] = useState([]);\r\n    const allorders = async (ids) => {\r\n        try {\r\n            axios.get(`http://localhost:8000/essay-helpers/api/getorders.php`)\r\n                // axios.get(`https://graduate-essay-helpers.com/api/getorders.php`)\r\n                .then(res => {\r\n                    console.log(res.data.orderlist.orderdata)\r\n                    setOrder(res.data.orderlist.orderdata);\r\n                })\r\n        } catch (error) { throw error; }\r\n    };\r\n\r\n    // console.log(isorder)\r\n\r\n    // ========================================================\r\n\r\n    const [selected, setSelected] = useState(-1);\r\n\r\n    const value = selected !== -1 && isorder[selected];\r\n\r\n    const ttlRef = useRef();\r\n\r\n    console.log(ttlRef);\r\n\r\n    const [orderId, setOrderId] = useState([]);\r\n\r\n    // =============================================================\r\n\r\n    const [getTitle, setGetTitle] = useState({\r\n        title: value.title,\r\n        order_id: \"\",\r\n        user_id: \"\",\r\n    });\r\n\r\n    const onChangeValue = (e) => {\r\n        // setSelected(e.target.value)\r\n        setGetTitle({\r\n            ...getTitle,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    console.log(getTitle);\r\n\r\n    // ====================================================================\r\n\r\n    const submitForm = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            e.persist();\r\n\r\n            axios.post(`http://localhost:8000/essay-helpers/api/gettitle.php`, {\r\n                order_id: value.id,\r\n                user_id: value.user_id,\r\n                title: getTitle.title,\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    setGetTitle(res.data.orderlist.orderdata);\r\n                    ttlRef.current = res.data.orderlist.orderdata;\r\n\r\n                    const id = ttlRef.current[0].id\r\n                    console.log(id);\r\n\r\n                    setOrderId(id);\r\n                    if (res.data.success === true) {\r\n                        props.history.push({ pathname: \"/upload-work/\", search: \"?id=\" + id, state: { getData: res.data.orderlist.orderdata } })\r\n                    }\r\n                    // else {\r\n                    //     props.history.push({ pathname: \"/upload-work/\" })\r\n                    // }\r\n                    // props.history.push({pathname: \"/assign/\", search: \"?id=\" + id, state: { rowIndex: res[0].data.orderlist.orderdata }})\r\n                    // alert(\"Coupon created and assigned to client successfully!\");\r\n                    // { res.data.sucess = \"false\" ? console.log(\"title not selected\") : window.location = \"/orders\" }\r\n                    return props;\r\n                })\r\n\r\n        } catch (error) { throw error; }\r\n    };\r\n\r\n    console.log(getTitle);\r\n    const dan = SendForm();\r\n    console.log(dan.dev);\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4\">\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle title=\"Upload Work\" subtitle=\"\" className=\"text-sm-left mb-3\" />\r\n            </Row>\r\n            {\r\n                location.search != \"\" ?\r\n                    <>\r\n                        <Row>\r\n                            <Col lg=\"12\">\r\n                                <SendForm />\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Row>\r\n                            <Col lg=\"12\">\r\n                                <Card small className=\"mb-4\">\r\n                                    <CardHeader className=\"border-bottom\">\r\n                                        <h6 className='m-0'>Send Order</h6>\r\n                                    </CardHeader>\r\n                                    <ListGroup flush>\r\n                                        <ListGroupItem className=\"p-3\">\r\n                                            <Form onSubmit={submitForm}>\r\n                                                <FormGroup>\r\n                                                    <label htmlFor='title'><b>Document Title: </b></label>\r\n                                                    {/* <Row> */}\r\n                                                    <Col lg=\"8\">\r\n                                                        <FormSelect\r\n                                                            name=\"title\"\r\n                                                            id=\"title\"\r\n                                                            style={{ fontWeight: '500', fontSize: '1.2rem', color: 'black' }}\r\n                                                            size=\"lg\"\r\n                                                            onChange={(e) => {\r\n                                                                setSelected(e.target.value);\r\n                                                                setGetTitle({\r\n                                                                    ...getTitle,\r\n                                                                    [e.target.name]: e.target.value\r\n                                                                });\r\n                                                            }}\r\n                                                            value={selected}\r\n                                                        >\r\n                                                            <option value=\"select\">Select ---</option>\r\n\r\n                                                            {isorder.map((order, index) => (\r\n                                                                <>\r\n                                                                    <option\r\n                                                                        key={order.id}\r\n                                                                        value={index}\r\n                                                                    >{order.title}</option>\r\n                                                                </>\r\n                                                            ))}\r\n                                                        </FormSelect>\r\n                                                    </Col>\r\n                                                    {/* </Row> */}\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <Row>\r\n                                                        <Col lg=\"5\">\r\n                                                            {value &&\r\n                                                                <>\r\n                                                                    <label htmlFor='order_id'><b>Order id: </b></label>\r\n                                                                    <FormInput\r\n                                                                        name=\"order_id\"\r\n                                                                        id=\"order_id\"\r\n                                                                        disabled\r\n                                                                        value={value.id}\r\n                                                                        onChange={onChangeValue}\r\n                                                                        style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\r\n                                                                    ></FormInput>\r\n                                                                </>\r\n                                                            }\r\n                                                        </Col>\r\n                                                        <Col lg=\"5\">\r\n                                                            {value &&\r\n                                                                <>\r\n                                                                    <label htmlFor='user_id'><b>User id: </b></label>\r\n                                                                    <FormInput\r\n                                                                        name=\"user_id\"\r\n                                                                        id=\"user_id\"\r\n                                                                        disabled\r\n                                                                        value={value.user_id}\r\n                                                                        onChange={onChangeValue}\r\n                                                                        style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }}\r\n                                                                    ></FormInput>\r\n                                                                </>\r\n                                                            }\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </FormGroup>\r\n\r\n                                                <Button\r\n                                                    type=\"submit\" theme=\"accent\" value=\"send\"\r\n                                                    style={{ fontWeight: '500', fontSize: '0.9rem' }}\r\n                                                >Open</Button>\r\n                                            </Form>\r\n                                        </ListGroupItem>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n\r\n\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadWork"],"mappings":"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"},"metadata":{},"sourceType":"module"}