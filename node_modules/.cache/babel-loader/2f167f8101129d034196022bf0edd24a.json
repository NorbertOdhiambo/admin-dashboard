{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\admin_dashboard - Copy\\\\src\\\\components\\\\common\\\\SmallStats.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = { ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: false,\n            ticks: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: false,\n            scaleLabel: false,\n            ticks: {\n              display: false,\n              isplay: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n            }\n          }]\n        }\n      },\n      ...this.props.chartOptions\n    };\n    const chartConfig = { ...{\n        type: \"line\",\n        data: { ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const {\n      variation,\n      label,\n      value,\n      percentage,\n      increase\n    } = this.props;\n    const cardClasses = classNames(\"stats-small\", variation && `stats-small--${variation}`);\n    const cardBodyClasses = classNames(variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\");\n    const innerWrapperClasses = classNames(\"d-flex\", variation === \"1\" ? \"flex-column m-auto\" : \"px-3\");\n    const dataFieldClasses = classNames(\"stats-small__data\", variation === \"1\" && \"text-center\");\n    const labelClasses = classNames(\"stats-small__label\", \"text-uppercase\", variation !== \"1\" && \"mb-1\");\n    const valueClasses = classNames(\"stats-small__value\", \"count\", variation === \"1\" ? \"my-3\" : \"m-0\");\n    const innerDataFieldClasses = classNames(\"stats-small__data\", variation !== \"1\" && \"text-right align-items-center\");\n    const percentageClasses = classNames(\"stats-small__percentage\", `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`);\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      small: true,\n      className: cardClasses,\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        className: cardBodyClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: innerWrapperClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: dataFieldClasses,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: labelClasses,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: valueClasses,\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: innerDataFieldClasses,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: percentageClasses,\n              children: percentage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          height: canvasHeight,\n          ref: this.canvasRef,\n          className: `stats-small-${shortid()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\nexport default SmallStats;","map":{"version":3,"names":["React","PropTypes","classNames","shortid","Card","CardBody","Chart","SmallStats","Component","constructor","props","canvasRef","createRef","componentDidMount","chartOptions","maintainAspectRatio","responsive","legend","display","tooltips","enabled","custom","elements","point","radius","line","tension","scales","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","chartData","data","chartConfig","type","labels","chartLabels","datasets","options","current","render","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","propTypes","string","oneOfType","number","bool","object","array","isRequired","defaultProps","Object","create"],"sources":["C:/Users/HP/Desktop/admin_dashboard - Copy/src/components/common/SmallStats.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { variation, label, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>{percentage}</span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}