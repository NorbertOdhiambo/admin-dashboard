{"ast":null,"code":"'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function (chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function (chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function (e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function () {\n        return '';\n      },\n      label: function (tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function (datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function (reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function (arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function () {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function (value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function (arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","map":{"version":3,"names":["defaults","require","elements","helpers","_set","animation","animateRotate","animateScale","hover","mode","legendCallback","chart","text","push","id","data","datasets","labels","length","i","backgroundColor","join","legend","generateLabels","map","label","meta","getDatasetMeta","ds","arc","custom","valueAtIndexOrDefault","arcOpts","options","fill","stroke","borderColor","bw","borderWidth","fillStyle","strokeStyle","lineWidth","hidden","isNaN","index","onClick","e","legendItem","ilen","update","cutoutPercentage","rotation","Math","PI","circumference","tooltips","callbacks","title","tooltipItem","dataLabel","value","datasetIndex","isArray","slice","clone","doughnut","module","exports","Chart","controllers","pie","DatasetController","extend","dataElementType","Arc","linkScales","noop","getRingIndex","ringIndex","j","isDatasetVisible","reset","me","chartArea","opts","availableWidth","right","left","availableHeight","bottom","top","minSize","min","offset","x","y","getMeta","startAngle","endAngle","start","cos","sin","end","contains0","contains90","contains180","contains270","cutout","max","size","width","height","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","updateElement","animationOpts","centerX","centerY","dataset","getDataset","calculateCircumference","_datasetIndex","_index","_model","model","valueOrDefault","elementOpts","pivot","element","abs","arcs","hoverWidth","_chart","config","hoverBorderWidth"],"sources":["C:/xampp/htdocs/essay-helpers/admin_dashboard/node_modules/chart.js/src/controllers/controller.doughnut.js"],"sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}