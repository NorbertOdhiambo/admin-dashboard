{"ast":null,"code":"'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function (value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function (value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function (inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","map":{"version":3,"names":["helpers","require","module","exports","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","top","right","bottom","left","height","width","resolve","inputs","context","index","i","ilen","length","undefined","isArray"],"sources":["C:/xampp/htdocs/essay-helpers/admin_dashboard/node_modules/chart.js/src/helpers/helpers.options.js"],"sourcesContent":["'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;EAChB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,YAAY,EAAE,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;IACnC,IAAIC,OAAO,GAAG,CAAC,KAAKF,KAAN,EAAaG,KAAb,CAAmB,sCAAnB,CAAd;;IACA,IAAI,CAACD,OAAD,IAAYA,OAAO,CAAC,CAAD,CAAP,KAAe,QAA/B,EAAyC;MACxC,OAAOD,IAAI,GAAG,GAAd;IACA;;IAEDD,KAAK,GAAG,CAACE,OAAO,CAAC,CAAD,CAAhB;;IAEA,QAAQA,OAAO,CAAC,CAAD,CAAf;MACA,KAAK,IAAL;QACC,OAAOF,KAAP;;MACD,KAAK,GAAL;QACCA,KAAK,IAAI,GAAT;QACA;;MACD;QACC;IAPD;;IAUA,OAAOC,IAAI,GAAGD,KAAd;EACA,CA5Be;;EA8BhB;AACD;AACA;AACA;AACA;AACA;AACA;EACCI,SAAS,EAAE,UAASJ,KAAT,EAAgB;IAC1B,IAAIK,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb;;IAEA,IAAIb,OAAO,CAACc,QAAR,CAAiBT,KAAjB,CAAJ,EAA6B;MAC5BK,CAAC,GAAG,CAACL,KAAK,CAACU,GAAP,IAAc,CAAlB;MACAJ,CAAC,GAAG,CAACN,KAAK,CAACW,KAAP,IAAgB,CAApB;MACAJ,CAAC,GAAG,CAACP,KAAK,CAACY,MAAP,IAAiB,CAArB;MACAJ,CAAC,GAAG,CAACR,KAAK,CAACa,IAAP,IAAe,CAAnB;IACA,CALD,MAKO;MACNR,CAAC,GAAGC,CAAC,GAAGC,CAAC,GAAGC,CAAC,GAAG,CAACR,KAAD,IAAU,CAA1B;IACA;;IAED,OAAO;MACNU,GAAG,EAAEL,CADC;MAENM,KAAK,EAAEL,CAFD;MAGNM,MAAM,EAAEL,CAHF;MAINM,IAAI,EAAEL,CAJA;MAKNM,MAAM,EAAET,CAAC,GAAGE,CALN;MAMNQ,KAAK,EAAEP,CAAC,GAAGF;IANL,CAAP;EAQA,CAzDe;;EA2DhB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCU,OAAO,EAAE,UAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiC;IACzC,IAAIC,CAAJ,EAAOC,IAAP,EAAarB,KAAb;;IAEA,KAAKoB,CAAC,GAAG,CAAJ,EAAOC,IAAI,GAAGJ,MAAM,CAACK,MAA1B,EAAkCF,CAAC,GAAGC,IAAtC,EAA4C,EAAED,CAA9C,EAAiD;MAChDpB,KAAK,GAAGiB,MAAM,CAACG,CAAD,CAAd;;MACA,IAAIpB,KAAK,KAAKuB,SAAd,EAAyB;QACxB;MACA;;MACD,IAAIL,OAAO,KAAKK,SAAZ,IAAyB,OAAOvB,KAAP,KAAiB,UAA9C,EAA0D;QACzDA,KAAK,GAAGA,KAAK,CAACkB,OAAD,CAAb;MACA;;MACD,IAAIC,KAAK,KAAKI,SAAV,IAAuB5B,OAAO,CAAC6B,OAAR,CAAgBxB,KAAhB,CAA3B,EAAmD;QAClDA,KAAK,GAAGA,KAAK,CAACmB,KAAD,CAAb;MACA;;MACD,IAAInB,KAAK,KAAKuB,SAAd,EAAyB;QACxB,OAAOvB,KAAP;MACA;IACD;EACD;AAtFe,CAAjB"},"metadata":{},"sourceType":"script"}