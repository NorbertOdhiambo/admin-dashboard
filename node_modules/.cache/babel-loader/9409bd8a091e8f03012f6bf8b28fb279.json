{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\dashboard\\\\src\\\\components\\\\assign-components\\\\AssignForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardHeader, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, DatePicker, Button } from \"shards-react\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignForm = () => {\n  _s();\n\n  const location = useLocation();\n  const [orderAssign, setOrderAssign] = useState({\n    title: location.state.rowIndex[0].title,\n    assigned_to: '',\n    priority: '',\n    assign_date: '',\n    notes: '',\n    wrt_id: ''\n  }); // ==================================================\n\n  const onChangeValue = e => {\n    setOrderAssign({ ...orderAssign,\n      [e.target.name]: e.target.value\n    });\n  }; // ==================================================\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    allwriters();\n  }, []);\n  const [iswriter, setwriter] = useState([]);\n\n  const allwriters = async ids => {\n    try {\n      // axios.get(`http://localhost:8000/essay-helpers/api/assignwriter.php`)\n      axios.get(`https://graduate-essay-helpers.com/api/assignwriter.php`).then(res => {\n        console.log(res.data.writerslist.writerdata);\n        setwriter(res.data.writerslist.writerdata);\n      });\n    } catch (error) {\n      throw error;\n    }\n  }; // =================================================\n\n\n  const [selected, setSelected] = useState(-1);\n  const value = selected !== -1 && iswriter[selected];\n\n  const submitAssignedOrder = async event => {\n    try {\n      event.preventDefault();\n      event.persist(); // axios.post(`http://localhost:8000/essay-helpers/api/updateassigning.php`,\n\n      axios.post(`https://graduate-essay-helpers.com/api/updateassigning.php`, {\n        title: orderAssign.title,\n        assigned_to: value.name,\n        priority: orderAssign.priority,\n        assign_date: orderAssign.assign_date,\n        notes: orderAssign.notes,\n        wrt_id: value.id,\n        ord_id: location.state.rowIndex[0].id\n      }).then(res => {\n        console.log(res.data);\n        alert(`Task assigned to ${value.name} successfully`);\n        window.location = \"/orders\";\n        return;\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  console.log(iswriter);\n  console.log(location);\n  console.log(selected);\n  console.log(value);\n  console.log(orderAssign);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: location.state.rowIndex[0].order_status === \"DELIVERED\" ? /*#__PURE__*/_jsxDEV(Card, {\n      small: true,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0\",\n          children: \"Delivered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        flush: true,\n        children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    rotate: \"-45deg\",\n                    position: \"relative\",\n                    fontSize: \"3rem\",\n                    fontWeight: \"500\",\n                    objectFit: \"contain\"\n                  },\n                  children: \"DELIVERED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      small: true,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0\",\n          children: \"Assignment Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        flush: true,\n        children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"insertForm\",\n                onSubmit: submitAssignedOrder,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"title\",\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                    id: \"title\",\n                    name: \"title\",\n                    placeholder: \"Task title\",\n                    value: orderAssign.title,\n                    onChange: onChangeValue,\n                    style: {\n                      fontWeight: '500',\n                      fontSize: '0.9rem',\n                      color: 'black'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"assign\",\n                    children: \"Assigned to:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    style: {\n                      fontWeight: '500',\n                      color: 'black'\n                    },\n                    name: \"assigned_to\",\n                    id: \"assigned_to\",\n                    onChange: () => {\n                      setSelected(e.target.value);\n                      setOrderAssign({ ...orderAssign,\n                        [e.target.name]: e.target.value\n                      });\n                    },\n                    value: selected // onChangeValue={onChangeValue}\n                    // size=\"md\"\n                    ,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"first\",\n                      children: \"Select ---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 49\n                    }, this), iswriter.map((writer, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: index,\n                        children: writer.name\n                      }, writer.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), value && /*#__PURE__*/_jsxDEV(FormInput, {\n                  id: \"wrt_id\",\n                  name: \"wrt_id\",\n                  placeholder: \"writer id\",\n                  value: value.id,\n                  onChange: onChangeValue,\n                  style: {\n                    fontWeight: '500',\n                    fontSize: '0.9rem',\n                    color: 'black'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"priority\",\n                    children: \"Task priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    style: {\n                      fontWeight: '500',\n                      color: 'black'\n                    },\n                    name: \"priority\",\n                    id: \"priority\" // value={orderAssign.priority}\n                    ,\n                    onChange: onChangeValue // size=\"md\"\n                    ,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"High\",\n                      children: \"High\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Medium\",\n                      children: \"Medium\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Low\",\n                      children: \"Low\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"start_date\",\n                        children: \"Start date: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                        name: \"assign_date\",\n                        id: \"start_date\",\n                        type: \"date\",\n                        onChange: onChangeValue\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"due_date\",\n                        children: \"Due date: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                        type: \"date\",\n                        name: \"due_date\",\n                        id: \"due_date\" // placeholder=\"due date\"\n                        ,\n                        onChange: onChangeValue // value={orderAssign.assigned_to}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"notes\",\n                      children: \"Notes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(FormTextarea, {\n                      id: \"notes\",\n                      name: \"notes\",\n                      rows: \"4\",\n                      onChange: onChangeValue,\n                      style: {\n                        fontWeight: '500',\n                        fontSize: '1rem',\n                        color: 'black'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  theme: \"accent\",\n                  value: \"update\",\n                  style: {\n                    fontWeight: '500',\n                    fontSize: '0.9rem'\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignForm, \"Yg5m+Siiu3qOhK8cDxWBQ2bWJW4=\", false, function () {\n  return [useLocation];\n});\n\n_c = AssignForm;\nexport default AssignForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardHeader","ListGroup","ListGroupItem","Row","Col","Form","FormGroup","FormInput","FormSelect","FormTextarea","DatePicker","Button","useLocation","AssignForm","location","orderAssign","setOrderAssign","title","state","rowIndex","assigned_to","priority","assign_date","notes","wrt_id","onChangeValue","e","target","name","value","window","scrollTo","allwriters","iswriter","setwriter","ids","get","then","res","console","log","data","writerslist","writerdata","error","selected","setSelected","submitAssignedOrder","event","preventDefault","persist","post","id","ord_id","alert","order_status","height","display","alignItems","justifyContent","rotate","position","fontSize","fontWeight","objectFit","color","map","writer","index"],"sources":["C:/Users/HP/Desktop/dashboard/src/components/assign-components/AssignForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    FormInput,\r\n    FormSelect,\r\n    FormTextarea,\r\n    DatePicker,\r\n    Button\r\n} from \"shards-react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst AssignForm = () => {\r\n\r\n    const location = useLocation();\r\n\r\n    const [orderAssign, setOrderAssign] = useState({\r\n        title: location.state.rowIndex[0].title,\r\n        assigned_to: '',\r\n        priority: '',\r\n        assign_date: '',\r\n        notes: '',\r\n        wrt_id: '',\r\n    });\r\n\r\n    // ==================================================\r\n\r\n    const onChangeValue = (e) => {\r\n        setOrderAssign({\r\n            ...orderAssign,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    // ==================================================\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        allwriters();\r\n    }, []);\r\n\r\n    const [iswriter, setwriter] = useState([]);\r\n    const allwriters = async (ids) => {\r\n        try {\r\n            // axios.get(`http://localhost:8000/essay-helpers/api/assignwriter.php`)\r\n            axios.get(`https://graduate-essay-helpers.com/api/assignwriter.php`)\r\n                .then(res => {\r\n                    console.log(res.data.writerslist.writerdata)\r\n                    setwriter(res.data.writerslist.writerdata);\r\n                })\r\n        } catch (error) { throw error; }\r\n    };\r\n\r\n    // =================================================\r\n\r\n\r\n    const [selected, setSelected] = useState(-1);\r\n\r\n    const value = selected !== -1 && iswriter[selected];\r\n\r\n    const submitAssignedOrder = async (event) => {\r\n        try {\r\n            event.preventDefault();\r\n            event.persist();\r\n            // axios.post(`http://localhost:8000/essay-helpers/api/updateassigning.php`,\r\n            axios.post(`https://graduate-essay-helpers.com/api/updateassigning.php`,\r\n                {\r\n                    title: orderAssign.title,\r\n                    assigned_to: value.name,\r\n                    priority: orderAssign.priority,\r\n                    assign_date: orderAssign.assign_date,\r\n                    notes: orderAssign.notes,\r\n                    wrt_id: value.id,\r\n                    ord_id: location.state.rowIndex[0].id,\r\n                })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    alert(`Task assigned to ${value.name} successfully`);\r\n                    window.location = \"/orders\"\r\n                    return;\r\n                })\r\n        } catch (error) { throw error; }\r\n    };\r\n\r\n\r\n\r\n    console.log(iswriter);\r\n    console.log(location);\r\n    console.log(selected);\r\n    console.log(value);\r\n    console.log(orderAssign);\r\n\r\n    return (\r\n        <>\r\n            {location.state.rowIndex[0].order_status === \"DELIVERED\" ?\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader className=\"border-bottom\">\r\n                        <h6 className=\"m-0\">Delivered</h6>\r\n                    </CardHeader>\r\n                    <ListGroup flush>\r\n                        <ListGroupItem className=\"p-3\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <div style={{ height: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                        <h3 style={{ rotate: \"-45deg\", position: \"relative\", fontSize: \"3rem\", fontWeight: \"500\", objectFit: \"contain\" }}>DELIVERED</h3>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card>\r\n                :\r\n                <Card small className=\"mb-4\">\r\n                    <CardHeader className=\"border-bottom\">\r\n                        <h6 className=\"m-0\">Assignment Form</h6>\r\n                    </CardHeader>\r\n                    <ListGroup flush>\r\n                        <ListGroupItem className=\"p-3\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form className=\"insertForm\" onSubmit={submitAssignedOrder}>\r\n                                        <FormGroup>\r\n                                            <label htmlFor='title'>Title</label>\r\n                                            <FormInput\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                placeholder=\"Task title\"\r\n                                                value={orderAssign.title}\r\n                                                onChange={onChangeValue}\r\n                                                style={{ fontWeight: '500', fontSize: '0.9rem', color: 'black' }}\r\n                                            ></FormInput>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"assign\">Assigned to:</label>\r\n                                            <FormSelect\r\n                                                style={{ fontWeight: '500', color: 'black' }}\r\n                                                name=\"assigned_to\"\r\n                                                id=\"assigned_to\"\r\n                                                onChange={() => {\r\n                                                    setSelected(e.target.value);\r\n                                                    setOrderAssign({\r\n                                                        ...orderAssign,\r\n                                                        [e.target.name]: e.target.value\r\n                                                    });\r\n                                                }}\r\n                                                value={selected}\r\n                                            // onChangeValue={onChangeValue}\r\n                                            // size=\"md\"\r\n                                            >\r\n                                                <option value=\"first\">Select ---</option>\r\n                                                {iswriter.map((writer, index) => (\r\n                                                    <>\r\n                                                        <option\r\n                                                            key={writer.id}\r\n                                                            value={index}\r\n                                                        >{writer.name}</option>\r\n                                                    </>\r\n                                                ))}\r\n\r\n                                            </FormSelect>\r\n                                        </FormGroup>\r\n                                        {value &&\r\n\r\n                                            <FormInput\r\n                                                id=\"wrt_id\"\r\n                                                name=\"wrt_id\"\r\n                                                placeholder=\"writer id\"\r\n                                                value={value.id}\r\n                                                onChange={onChangeValue}\r\n                                                style={{ fontWeight: '500', fontSize: '0.9rem', color: 'black' }}\r\n                                            ></FormInput>\r\n                                        }\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"priority\">Task priority:</label>\r\n                                            <FormSelect\r\n                                                style={{ fontWeight: '500', color: 'black' }}\r\n                                                name=\"priority\"\r\n                                                id=\"priority\"\r\n                                                // value={orderAssign.priority}\r\n                                                onChange={onChangeValue}\r\n                                            // size=\"md\"\r\n                                            >\r\n                                                {/* <option value=\"first\">Select ---</option> */}\r\n                                                <option value=\"High\">High</option>\r\n                                                <option value=\"Medium\">Medium</option>\r\n                                                <option value=\"Low\">Low</option>\r\n                                            </FormSelect>\r\n                                        </FormGroup>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <FormGroup>\r\n                                                    <label htmlFor=\"start_date\">Start date: </label>\r\n                                                    <FormInput\r\n                                                        name=\"assign_date\"\r\n                                                        id=\"start_date\"\r\n                                                        type=\"date\"\r\n                                                        onChange={onChangeValue}\r\n                                                    ></FormInput>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <FormGroup>\r\n                                                    <label htmlFor=\"due_date\">Due date: </label>\r\n                                                    <FormInput\r\n                                                        type=\"date\"\r\n                                                        name=\"due_date\"\r\n                                                        id=\"due_date\"\r\n                                                        // placeholder=\"due date\"\r\n                                                        onChange={onChangeValue}\r\n                                                    // value={orderAssign.assigned_to}\r\n                                                    ></FormInput>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md=\"12\" className=\"form-group\">\r\n                                                <label htmlFor=\"notes\">Notes</label>\r\n                                                <FormTextarea id=\"notes\" name=\"notes\" rows=\"4\" onChange={onChangeValue} style={{ fontWeight: '500', fontSize: '1rem', color: 'black' }} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Button\r\n                                            type=\"submit\" theme=\"accent\" value=\"update\"\r\n                                            style={{ fontWeight: '500', fontSize: '0.9rem' }}\r\n                                        >Save</Button>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AssignForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}