{"ast":null,"code":"import { sort, filter } from './utils';\nimport { ActionTypes, DOMAIN } from './actions';\nconst initialState = {\n  initialized: false,\n  initialData: [],\n  data: [],\n  page: [],\n  filterValues: {\n    globalSearch: ''\n  },\n  totalPages: 0,\n  sortBy: null,\n  pageNumber: 0,\n  pageSize: 5\n};\n\nfunction calculatePage(data, pageSize, pageNumber) {\n  if (pageSize === 0 || !data.length) {\n    return {\n      page: data,\n      totalPages: 0\n    };\n  }\n\n  const start = pageSize * pageNumber;\n  return {\n    page: data.slice(start, start + pageSize),\n    totalPages: Math.ceil(data.length / pageSize)\n  };\n}\n\nfunction pageNumberChange(state, _ref) {\n  let {\n    payload: pageNumber\n  } = _ref;\n  return { ...state,\n    ...calculatePage(state.data, state.pageSize, pageNumber),\n    pageNumber\n  };\n}\n\nfunction pageSizeChange(state, action) {\n  const newPageSize = Number(action.payload);\n  const {\n    pageNumber,\n    pageSize\n  } = state;\n  const newPageNumber = newPageSize ? Math.floor(pageNumber * pageSize / newPageSize) : 0;\n  return { ...state,\n    ...calculatePage(state.data, newPageSize, newPageNumber),\n    pageSize: newPageSize,\n    pageNumber: newPageNumber\n  };\n}\n\nfunction dataSort(state, _ref2) {\n  let {\n    payload: sortBy\n  } = _ref2;\n  const data = sort(sortBy, state.data);\n  return { ...state,\n    ...calculatePage(data, state.pageSize, state.pageNumber),\n    sortBy,\n    data\n  };\n}\n\nfunction dataFilter(state, _ref3) {\n  let {\n    payload: {\n      key,\n      value,\n      filters\n    }\n  } = _ref3;\n  const newFilterValues = { ...state.filterValues,\n    [key]: value\n  };\n  let data = filter(filters, newFilterValues, state.initialData);\n\n  if (state.sortBy) {\n    data = sort(state.sortBy, data);\n  }\n\n  return { ...state,\n    ...calculatePage(data, state.pageSize, 0),\n    data,\n    filterValues: newFilterValues,\n    pageNumber: 0\n  };\n}\n\nfunction dataInit(state, action) {\n  const {\n    payload\n  } = action;\n  return { ...state,\n    initialized: true,\n    initialData: payload,\n    data: payload\n  };\n}\n\nfunction dataLoaded(state, _ref4) {\n  let {\n    payload: data\n  } = _ref4;\n  // Filled missing properties.\n  const filledState = { ...initialState,\n    ...state\n  };\n  const {\n    pageSize,\n    pageNumber\n  } = filledState;\n\n  if (state.sortBy) {\n    data = sort(state.sortBy, data);\n  }\n\n  return { ...filledState,\n    ...calculatePage(data, pageSize, pageNumber),\n    initialData: data,\n    data\n  };\n}\n\nexport function dataReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.INITIALIZE:\n      return dataInit(state, action);\n\n    case ActionTypes.DATA_LOADED:\n      return dataLoaded(state, action);\n\n    case ActionTypes.PAGE_NUMBER_CHANGE:\n      return pageNumberChange(state, action);\n\n    case ActionTypes.PAGE_SIZE_CHANGE:\n      return pageSizeChange(state, action);\n\n    case ActionTypes.DATA_FILTER:\n      return dataFilter(state, action);\n\n    case ActionTypes.DATA_SORT:\n      return dataSort(state, action);\n  }\n\n  return state;\n}\nexport default function tableReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.INITIALIZE:\n    case ActionTypes.DATA_LOADED:\n    case ActionTypes.PAGE_NUMBER_CHANGE:\n    case ActionTypes.PAGE_SIZE_CHANGE:\n    case ActionTypes.DATA_FILTER:\n    case ActionTypes.DATA_SORT:\n      {\n        const {\n          meta: {\n            table\n          }\n        } = action;\n        return { ...state,\n          [table]: dataReducer(state[table], action)\n        };\n      }\n  }\n\n  return state;\n}","map":{"version":3,"names":["sort","filter","ActionTypes","DOMAIN","initialState","initialized","initialData","data","page","filterValues","globalSearch","totalPages","sortBy","pageNumber","pageSize","calculatePage","length","start","slice","Math","ceil","pageNumberChange","state","payload","pageSizeChange","action","newPageSize","Number","newPageNumber","floor","dataSort","dataFilter","key","value","filters","newFilterValues","dataInit","dataLoaded","filledState","dataReducer","type","INITIALIZE","DATA_LOADED","PAGE_NUMBER_CHANGE","PAGE_SIZE_CHANGE","DATA_FILTER","DATA_SORT","tableReducer","meta","table"],"sources":["C:/xampp/htdocs/essay-helpers/admin_dashboard/src/components/components-tb/dataReducer.js"],"sourcesContent":["/**\n * @flow\n */\n\nimport { sort, filter } from './utils';\nimport { ActionTypes, DOMAIN } from './actions';\nimport type { State, Action, SortBy } from './types';\n\nconst initialState: State = {\n  initialized: false,\n  initialData: [],\n  data: [],\n  page: [],\n  filterValues: { globalSearch: '' },\n  totalPages: 0,\n  sortBy: null,\n  pageNumber: 0,\n  pageSize: 5,\n};\n\nfunction calculatePage(data, pageSize, pageNumber) {\n  if (pageSize === 0 || !data.length) {\n    return { page: data, totalPages: 0 };\n  }\n\n  const start = pageSize * pageNumber;\n\n  return {\n    page: data.slice(start, start + pageSize),\n    totalPages: Math.ceil(data.length / pageSize),\n  };\n}\n\nfunction pageNumberChange(state, { payload: pageNumber }) {\n  return {\n    ...state,\n    ...calculatePage(state.data, state.pageSize, pageNumber),\n    pageNumber,\n  };\n}\n\nfunction pageSizeChange(state, action) {\n  const newPageSize = Number(action.payload);\n  const { pageNumber, pageSize } = state;\n  const newPageNumber = newPageSize\n    ? Math.floor(pageNumber * pageSize / newPageSize)\n    : 0;\n\n  return {\n    ...state,\n    ...calculatePage(state.data, newPageSize, newPageNumber),\n    pageSize: newPageSize,\n    pageNumber: newPageNumber,\n  };\n}\n\nfunction dataSort(state, { payload: sortBy }) {\n  const data = sort(sortBy, state.data);\n\n  return {\n    ...state,\n    ...calculatePage(data, state.pageSize, state.pageNumber),\n    sortBy,\n    data,\n  };\n}\n\nfunction dataFilter(state, { payload: { key, value, filters } }) {\n  const newFilterValues = { ...state.filterValues, [key]: value };\n  let data = filter(filters, newFilterValues, state.initialData);\n\n  if (state.sortBy) {\n    data = sort(state.sortBy, data);\n  }\n\n  return {\n    ...state,\n    ...calculatePage(data, state.pageSize, 0),\n    data,\n    filterValues: newFilterValues,\n    pageNumber: 0,\n  };\n}\n\nfunction dataInit(state, action) {\n  const { payload } = action;\n\n  return {\n    ...state,\n    initialized: true,\n    initialData: payload,\n    data: payload,\n  };\n}\n\nfunction dataLoaded(state, { payload: data }) {\n  // Filled missing properties.\n  const filledState = { ...initialState, ...state };\n  const { pageSize, pageNumber } = filledState;\n\n  if (state.sortBy) {\n    data = sort(state.sortBy, data);\n  }\n\n  return {\n    ...filledState,\n    ...calculatePage(data, pageSize, pageNumber),\n    initialData: data,\n    data,\n  };\n}\n\nexport function dataReducer(\n  state: State = initialState,\n  action: Action,\n): State {\n  switch (action.type) {\n    case ActionTypes.INITIALIZE:\n      return dataInit(state, action);\n\n    case ActionTypes.DATA_LOADED:\n      return dataLoaded(state, action);\n\n    case ActionTypes.PAGE_NUMBER_CHANGE:\n      return pageNumberChange(state, action);\n\n    case ActionTypes.PAGE_SIZE_CHANGE:\n      return pageSizeChange(state, action);\n\n    case ActionTypes.DATA_FILTER:\n      return dataFilter(state, action);\n\n    case ActionTypes.DATA_SORT:\n      return dataSort(state, action);\n  }\n\n  return state;\n}\n\nexport default function tableReducer(state: Object = {}, action: Action) {\n  switch (action.type) {\n    case ActionTypes.INITIALIZE:\n    case ActionTypes.DATA_LOADED:\n    case ActionTypes.PAGE_NUMBER_CHANGE:\n    case ActionTypes.PAGE_SIZE_CHANGE:\n    case ActionTypes.DATA_FILTER:\n    case ActionTypes.DATA_SORT: {\n      const { meta: { table } } = action;\n\n      return {\n        ...state,\n        [table]: dataReducer(state[table], action),\n      };\n    }\n  }\n\n  return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}