{"ast":null,"code":"import pathToRegexp from \"path-to-regexp\";\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n  if (pathCache[path]) return pathCache[path];\n  var keys = [];\n  var regexp = pathToRegexp(path, keys, options);\n  var result = {\n    regexp: regexp,\n    keys: keys\n  };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */\n\n\nfunction matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n  var _compilePath = compilePath(path, {\n    end: exact,\n    strict: strict,\n    sensitive: sensitive\n  }),\n      regexp = _compilePath.regexp,\n      keys = _compilePath.keys;\n\n  var match = regexp.exec(pathname);\n  if (!match) return null;\n  var url = match[0],\n      values = match.slice(1);\n  var isExact = pathname === url;\n  if (exact && !isExact) return null;\n  return {\n    path: path,\n    // the path used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url,\n    // the matched portion of the URL\n    isExact: isExact,\n    // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n}\n\nexport default matchPath;","map":{"version":3,"names":["pathToRegexp","cache","cacheLimit","cacheCount","compilePath","path","options","cacheKey","end","strict","sensitive","pathCache","keys","regexp","result","matchPath","pathname","arguments","length","undefined","_options","_options$exact","exact","_options$strict","_options$sensitive","_compilePath","match","exec","url","values","slice","isExact","params","reduce","memo","key","index","name"],"sources":["C:/Users/HP/Desktop/admin_dashboard/node_modules/react-router/es/matchPath.js"],"sourcesContent":["import pathToRegexp from \"path-to-regexp\";\n\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  var keys = [];\n  var regexp = pathToRegexp(path, keys, options);\n  var result = { regexp: regexp, keys: keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof options === \"string\") options = { path: options };\n\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n\n  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),\n      regexp = _compilePath.regexp,\n      keys = _compilePath.keys;\n\n  var match = regexp.exec(pathname);\n\n  if (!match) return null;\n\n  var url = match[0],\n      values = match.slice(1);\n\n  var isExact = pathname === url;\n\n  if (exact && !isExact) return null;\n\n  return {\n    path: path, // the path used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n    isExact: isExact, // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n}\n\nexport default matchPath;"],"mappings":"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"},"metadata":{},"sourceType":"module"}