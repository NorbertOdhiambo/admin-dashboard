{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\dashboard\\\\src\\\\components\\\\task-component\\\\TaskChart.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Card, CardHeader, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, Button } from \"shards-react\";\nimport CanvasJSReact from './canvasjs.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskChart = () => {\n  var CanvasJS = CanvasJSReact.CanvasJS;\n  var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n  const options = {\n    animationEnabled: true,\n    exportEnabled: true,\n    // theme: \"dark2\", // \"light1\", \"dark1\", \"dark2\"\n    title: {\n      text: \"Task Status\"\n    },\n    data: [{\n      type: \"pie\",\n      indexLabel: \"{label}: {y}%\",\n      startAngle: -90,\n      dataPoints: [{\n        y: 20,\n        label: \"Not Started\",\n        color: \"#cc99ff\"\n      }, {\n        y: 24,\n        label: \"In Progress\",\n        color: \"#4ddbff\"\n      }, {\n        y: 20,\n        label: \"Awaiting Review\"\n      }, {\n        y: 14,\n        label: \"On Hold\"\n      }, {\n        y: 12,\n        label: \"Completed\"\n      }, {\n        y: 10,\n        label: \"Overdue\"\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    small: true,\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskChart;\nexport default TaskChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskChart\");","map":{"version":3,"names":["React","axios","PropTypes","Card","CardHeader","ListGroup","ListGroupItem","Row","Col","Form","FormGroup","FormInput","FormSelect","FormTextarea","Button","CanvasJSReact","TaskChart","CanvasJS","CanvasJSChart","options","animationEnabled","exportEnabled","title","text","data","type","indexLabel","startAngle","dataPoints","y","label","color"],"sources":["C:/Users/HP/Desktop/dashboard/src/components/task-component/TaskChart.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    FormInput,\r\n    FormSelect,\r\n    FormTextarea,\r\n    Button\r\n} from \"shards-react\";\r\n\r\nimport CanvasJSReact from './canvasjs.react';\r\n\r\nconst TaskChart = () => {\r\n\r\n    var CanvasJS = CanvasJSReact.CanvasJS;\r\n    var CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n    const options = {\r\n        animationEnabled: true,\r\n        exportEnabled: true,\r\n        // theme: \"dark2\", // \"light1\", \"dark1\", \"dark2\"\r\n        title: {\r\n            text: \"Task Status\"\r\n        },\r\n        data: [{\r\n            type: \"pie\",\r\n            indexLabel: \"{label}: {y}%\",\r\n            startAngle: -90,\r\n            dataPoints: [\r\n                { y: 20, label: \"Not Started\", color: \"#cc99ff\" },\r\n                { y: 24, label: \"In Progress\", color: \"#4ddbff\" },\r\n                { y: 20, label: \"Awaiting Review\" },\r\n                { y: 14, label: \"On Hold\" },\r\n                { y: 12, label: \"Completed\" },\r\n                { y: 10, label: \"Overdue\" }\r\n            ]\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <div>\r\n                <CanvasJSChart options={options}\r\n                /* onRef={ref => this.chart = ref} */\r\n                />\r\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,SAHJ,EAIIC,aAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,IAPJ,EAQIC,SARJ,EASIC,SATJ,EAUIC,UAVJ,EAWIC,YAXJ,EAYIC,MAZJ,QAaO,cAbP;AAeA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAEpB,IAAIC,QAAQ,GAAGF,aAAa,CAACE,QAA7B;EACA,IAAIC,aAAa,GAAGH,aAAa,CAACG,aAAlC;EAEA,MAAMC,OAAO,GAAG;IACZC,gBAAgB,EAAE,IADN;IAEZC,aAAa,EAAE,IAFH;IAGZ;IACAC,KAAK,EAAE;MACHC,IAAI,EAAE;IADH,CAJK;IAOZC,IAAI,EAAE,CAAC;MACHC,IAAI,EAAE,KADH;MAEHC,UAAU,EAAE,eAFT;MAGHC,UAAU,EAAE,CAAC,EAHV;MAIHC,UAAU,EAAE,CACR;QAAEC,CAAC,EAAE,EAAL;QAASC,KAAK,EAAE,aAAhB;QAA+BC,KAAK,EAAE;MAAtC,CADQ,EAER;QAAEF,CAAC,EAAE,EAAL;QAASC,KAAK,EAAE,aAAhB;QAA+BC,KAAK,EAAE;MAAtC,CAFQ,EAGR;QAAEF,CAAC,EAAE,EAAL;QAASC,KAAK,EAAE;MAAhB,CAHQ,EAIR;QAAED,CAAC,EAAE,EAAL;QAASC,KAAK,EAAE;MAAhB,CAJQ,EAKR;QAAED,CAAC,EAAE,EAAL;QAASC,KAAK,EAAE;MAAhB,CALQ,EAMR;QAAED,CAAC,EAAE,EAAL;QAASC,KAAK,EAAE;MAAhB,CANQ;IAJT,CAAD;EAPM,CAAhB;EAsBA,oBACI,QAAC,IAAD;IAAM,KAAK,MAAX;IAAY,SAAS,EAAC,MAAtB;IAAA,uBACI;MAAA,uBACI,QAAC,aAAD;QAAe,OAAO,EAAEX;QACxB;;MADA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CArCD;;KAAMH,S;AAuCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}